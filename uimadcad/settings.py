import os, json

execution = {
	'onstartup': False,
	'trigger': 1,
	'steptime': 0.1,
	'checkdanger': 'startup',	# 'never'/False, 'startup'/True, 'always'
	}
	
view = {
	'layout': 'default',
	'theme': 'system',
	'enable_floating': False,	# floating dockable windows, may have performance issues with big meshes
	'window-size': (640,480),
	'layout': b'\x00\x00\x00\xff\x00\x00\x00\x00\xfd\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x01q\x00\x00\x02+\xfc\x02\x00\x00\x00\x03\xfb\xff\xff\xff\xff\x01\x00\x00\x00\x1c\x00\x00\x02+\x00\x00\x00\x87\x01\x00\x00\x03\xfb\xff\xff\xff\xff\x00\x00\x00\x01\x8e\x00\x00\x00\xb9\x00\x00\x00:\x01\x00\x00\x03\xfb\xff\xff\xff\xff\x00\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00z\x01\x00\x00\x03\x00\x00\x00\x01\x00\x00\x02:\x00\x00\x02+\xfc\x02\x00\x00\x00\x01\xfb\xff\xff\xff\xff\x01\x00\x00\x00\x1c\x00\x00\x02+\x00\x00\x000\x01\x00\x00\x03\x00\x00\x00\x00\x00\x00\x02+\x00\x00\x00\x04\x00\x00\x00\x04\x00\x00\x00\x08\x00\x00\x00\x08\xfc\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x02\xff\xff\xff\xff\x03\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x03\x00\x00\x014\x00\x00\x00L\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xff\xff\xff\xff\x03\x00\x00\x00\x00\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x03\x00\x00\x00\xda\xff\xff\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\xff\xff\xff\xff\x03\x00\x00\x01,\x00\x00\x00d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00',
	}

scriptview = {
	'tabsize': 4,
	'linewrap': False,
	'linenumbers': False,
	'font': ('NotoMono', 7),
	}

highlighter = {
	'background': (0,0,0),
	'currentline': (0.5, 0.5, 0.5),
	'editing': (20/255, 80/255, 0),
	'normal': (1, 1, 1),
	'keyword': None,
	'operator': None,
	'call': None,
	'number': None,
	'string': None,
	'comment': None,
	}

home = os.getenv('HOME')
locations = {
	'config': home+'/.config',
	'settings': home+'/.config/madcad/settings.json',
	'startup': home+'/.config/madcad/startup.py',
	}


settings = {'execution':execution, 'view':view, 'scriptview':scriptview, 'highlighter':highlighter}

def load(file=None):
	if not file:	file = locations['config']
	if isinstance(file, str):	file = open(file, 'r')
	changes = json.load(file)
	for group in settings:
		if group in changes:
			settings.update(changes[group])

def dump(file=None):
	if not file:	file = locations['config']
	if isinstance(file, str):	file = open(file, 'w')
	json.dump(settings, file)

